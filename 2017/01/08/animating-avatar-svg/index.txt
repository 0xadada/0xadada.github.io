3:I[5613,[],""]
5:I[1778,[],""]
6:I[5250,["250","static/chunks/250-d7e0a94ebe194dac.js","931","static/chunks/app/page-84b663e6d1625d16.js"],""]
7:I[1749,["250","static/chunks/250-d7e0a94ebe194dac.js","749","static/chunks/749-1aefd436964833c3.js","185","static/chunks/app/layout-fc0d62f13c865466.js"],"Image"]
4:["slug","2017/01/08/animating-avatar-svg","c"]
0:["jGjGEDDEwP329AlnKJ8iT",[[["",{"children":[["slug","2017/01/08/animating-avatar-svg","c"],{"children":["__PAGE__?{\"slug\":[\"2017\",\"01\",\"08\",\"animating-avatar-svg\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","2017/01/08/animating-avatar-svg","c"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/01f63581d77a7b07.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","html",null,{"lang":"en-US","children":["$","body",null,{"children":[["$","main",null,{"className":"layout_layout__dCqca","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","footer",null,{"className":"footer_footer__woFMY layout_layout__dCqca","children":[["$","nav",null,{"children":["$","p",null,{"children":["¬© 2003-","2024"," 0xADADA (unless otherwise noted.)",["$","br",null,{}],["$","span",null,{"className":"h-card","children":[["$","span",null,{"className":"p-note","hidden":true,"children":"0xADADA is a Software Engineer / Writer / Motorsports Driver exploring the impact of the attention economy on idleness, time, and lived experience. üßë‚Äçüíªüîßüöó‚úçÔ∏èüîí"}],["$","$L6",null,{"className":"u-url u-uid","href":"https://0xadada.pub/","title":"0xADADA","children":"0xADADA"}]," ",["$","$L6",null,{"href":"mailto:0xadada.pub@protonmail.com","className":"c-Meta u-email","rel":"me","title":"0xADADA","children":"Email"}]," ",["$","$L6",null,{"href":"https://warpcast.com/0xadada","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on Warpcast","children":"Farcaster"}]," ",["$","$L6",null,{"href":"https://mastodon.cloud/@0xADADA","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on Mastodon","children":"Mastodon"}]," ",["$","$L6",null,{"href":"https://bsky.app/profile/0xadada.bsky.social","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on Bluesky","children":"Bluesky"}]," ",["$","$L6",null,{"href":"https://twitter.com/0xadada","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on Twitter","children":["$","del",null,{"children":"Twitter"}]}]," ",["$","$L6",null,{"href":"https://github.com/0xadada","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on GitHub","children":"GitHub"}]," ",["$","$L6",null,{"href":"https://www.goodreads.com/review/list/60524683-0xadada?shelf=wanted","className":"u-url","rel":"me nofollow external noopener","title":"0xADADA on Goodreads","children":"Goodreads"}]," ",["$","$L6",null,{"href":"/rss.xml","children":"RSS"}]," ",["$","$L7",null,{"className":"u-photo","src":"/static/images/meta/avatar.svg","alt":"0xADADA icon","width":"20","height":"20","style":{"marginBottom":"-0.125rem"}}]]}]]}]}],["$","form",null,{"action":"https://buttondown.email/api/emails/embed-subscribe/0xadada","method":"post","target":"popupwindow","children":[["$","label",null,{"htmlFor":"email","children":["Sign up to get emailed when I write new things:"," "]}],["$","input",null,{"type":"email","name":"email","id":"email"}],["$","input",null,{"type":"submit","value":"Subscribe"}]]}]]}]]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f35390f3f688d4e9.css","precedence":"next","crossOrigin":""}]],"$L8"]]]]
2:["$","article",null,{"className":"hentry h-entry","children":[["$","header",null,{"children":[["$","h1",null,{"className":"entry-title p-name","children":"Animating SVG with CSS"}],["$","time",null,{"className":"display-date_published__A_L_d dt-published","dateTime":"2017-01-08T00:00:00.000Z","children":"Sunday January 8, 2017"}],["$","span",null,{"className":"h-card page_byline__wbXsN","children":[" by ",["$","span",null,{"className":"fn p-author p-name","children":"0xADADA"}]]}]]}],["$","div",null,{"className":"entry-content e-content","children":[["$","p",null,{"children":"I finally got around to converting my avatar from a raster graphic to a vector\nformat. I wanted to be able to animate the polygons using JavaScript and CSS.\nAnother great advantage of a vector format is how the format lends itself to\ngenerate a PNG or JPG in any size."}],"\n",["$","h2",null,{"id":"massaging-the-svg-file-format","children":"Massaging the SVG File Format"}],"\n",["$","p",null,{"children":["First things first, I took the source image and ran it through the\n",["$","a",null,{"href":"https://snorpey.github.io/triangulation/","children":"delaunay triangulation - image triangulation experiment"}],"\nsoftware, experimenting with various values for blur, accuracy and point count.\nThe output of this software was a ",["$","code",null,{"children":"512Kb"}]," SVG file."]}],"\n",["$","p",null,{"children":["Next I opened the file in ",["$","a",null,{"href":"https://inkscape.org/en/","children":"Inkscape"}],", a SVG vector\ngraphics editor to remove the polygons in the background, cleanup some awkward\npolys and make a few minor adjustments. Inkscape adds a bunch of metadata and\nadditional properties to the raw SVG that can be cleaned up."]}],"\n",["$","p",null,{"children":["Once I was happy with the results of my tweaking in Inkscape, I saved the SVG\nand opened it in ",["$","a",null,{"href":"https://jakearchibald.github.io/svgomg/","children":"SVGOMG"}]," a web-based\nSVG optimization GUI for the ",["$","a",null,{"href":"https://github.com/svg/svgo","children":"SVGO"}]," suite of tools.\nThis tool will output a much smaller SVG file that is ready for either editing\nor delivery over HTTP. In this case, the file was reduced to ",["$","code",null,{"children":"312Kb"}]," a 40%\nreduction in file size, primarily by transforming point-based ",["$","code",null,{"children":"<polygon>"}],"\nelements to the more concise to ",["$","code",null,{"children":"<path>"}]," element."]}],"\n",["$","h2",null,{"id":"animation","children":"Animation"}],"\n",["$","p",null,{"children":"With the SVG file ready, I moved on to the action animation work."}],"\n",["$","p",null,{"children":["The animation would be a series of CSS keyframes that would simply toggle the\nopacity level to produce a flickering affect. The artwork begins with all\nopacity set to ",["$","code",null,{"children":"0"}]," (transparent), and each keyframe incrementally toggles\nopacity until the last frame finally sets it to ",["$","code",null,{"children":"1"}],"."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-css","children":".p {\n  /* each polygon \"path\" starts fully transparent */\n  opacity: 0;\n}\n\n/* a set of keyframes that incrementally toggle opacity, this */\n/* keyframes set is called \"slide-into-place\" */\n@keyframes slide-into-place {\n  0% {\n    opacity: 1;\n  }\n  5% {\n    opacity: 0;\n  }\n  15% {\n    opacity: 1;\n  }\n  17% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  55% {\n    opacity: 0;\n  }\n  60% {\n    opacity: 1;\n  }\n  75% {\n    opacity: 0.25;\n  }\n  85% {\n    opacity: 0.85;\n  }\n  90% {\n    opacity: 0;\n  }\n  95% {\n    opacity: 0.25;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n"}]}],"\n",["$","p",null,{"children":["Every ",["$","code",null,{"children":"<path>"}]," in the SVG document is given a classname ",["$","code",null,{"children":"p"}]," (for path), I then\nuse javascript to get references to these paths, and simply add a new classname\n",["$","code",null,{"children":"is-animated"}]," to their ",["$","code",null,{"children":"class"}]," attribute. This classname will be used to attach\nthe keyframes to the SVG paths."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-css","children":".p.is-animated {\n  /* sets the keyframes to use for animation */\n  animation-name: slide-into-place;\n  /* pause before animation starts */\n  animation-delay: 1s;\n  animation-timing-function: ease;\n  animation-direction: normal;\n  /* Run the animation only once */\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n}\n"}]}],"\n",["$","p",null,{"children":["To attach the keyframe animation to the SVG ",["$","code",null,{"children":"<path>"}],", the only think necessary\nis to add the ",["$","code",null,{"children":"is-animated"}]," classname to the element. We do this on ",["$","code",null,{"children":"Line-A"}],".\nThis is done inside a loop that iterates over all the ",["$","code",null,{"children":"<path>"}]," elements."]}],"\n",["$","p",null,{"children":["If I just add the ",["$","code",null,{"children":"is-animated"}]," class to the element, all polygons will flicker\nat the same time, looking like the entire image is flickering- which isn‚Äôt what\nI want. To address this, I need to randomize the start-time of when each polygon\nbegins flickering. This makes each polygon flicker on its own timeline. I get a\nrandom number on ",["$","code",null,{"children":"Line-B"}]," and use that as a delay to begin the flickering."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"path.style.animationDelay"}]," (on ",["$","code",null,{"children":"Line-C"}],") is used to wait for a randomized\ntimeout (",["$","code",null,{"children":"Line-B"}],") period before animation starts."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function init() {\n  var paths = document.querySelectorAll(\"path\"),\n    i = 0,\n    randTimeout = null;\n  path = null;\n  for (i = 0; i < paths.length; i++) {\n    let path = paths[i];\n    randTimeout = Math.floor(Math.random() * (1500 - 1) + 1); // Line-B\n    path.style.animationDelay = randTimeout + \"ms\"; // Line-C\n    path.classList.add(\"is-animated\"); // Line-A\n  }\n}\n"}]}],"\n",["$","p",null,{"children":["The above ",["$","code",null,{"children":"init()"}]," function is called once the SVG document has finished\nloading."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-html","children":"<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewbox=\"0 0 660 660\"\n  onload=\"init()\"\n></svg>\n"}]}],"\n",["$","h2",null,{"id":"result","children":"Result"}],"\n",["$","p",null,{"children":[["$","object",null,{"type":"image/svg+xml","data":"/static/images/meta/avatar-animated.svg","height":"660","width":"660","children":" "}]," ",["$","em",null,{"children":"(Reload the page to view the animation\nagain)"}]]}]]}],["$","footer",null,{"className":"license_copyright__EpMnZ","children":["This is licensed under a Creative Commons ","cc-by-nc-sa"," International License"]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Animating SVG with CSS"}],["$","meta","3",{"name":"description","content":"How to use SVG and CSS to create dynamic imagery."}],["$","link","4",{"rel":"author","href":"https://0xadada.pub"}],["$","meta","5",{"name":"author","content":"0xADADA"}],["$","meta","6",{"name":"keywords","content":"projects,graphics,vector,animation,css"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://0xadada.pub/rss.xml"}],["$","meta","8",{"property":"og:title","content":"Animating SVG with CSS"}],["$","meta","9",{"property":"og:description","content":"How to use SVG and CSS to create dynamic imagery."}],["$","meta","10",{"property":"og:url","content":"https://0xadada.pub/2017/01/08/animating-avatar-svg/"}],["$","meta","11",{"property":"og:site_name","content":"0xADADA"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://0xadada.pub/static/images/meta/apple-touch-icon.png"}],["$","meta","14",{"property":"og:image:width","content":"800"}],["$","meta","15",{"property":"og:image:height","content":"800"}],["$","meta","16",{"property":"og:type","content":"article"}],["$","meta","17",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","18",{"name":"twitter:title","content":"Animating SVG with CSS"}],["$","meta","19",{"name":"twitter:description","content":"How to use SVG and CSS to create dynamic imagery."}],["$","meta","20",{"name":"twitter:image","content":"https://0xadada.pub/static/images/meta/apple-touch-icon.png"}],["$","meta","21",{"name":"twitter:image:width","content":"800"}],["$","meta","22",{"name":"twitter:image:height","content":"800"}],["$","link","23",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","link","24",{"rel":"apple-touch-icon","href":"/apple-icon.png?b764b3a1dbf00a82","type":"image/png","sizes":"180x180"}]]
1:null
