3:I[5613,[],""]
8:I[1778,[],""]
9:I[5250,["250","static/chunks/250-d7e0a94ebe194dac.js","931","static/chunks/app/page-f7ba098afe402509.js"],""]
4:["year","2018","d"]
5:["month","10","d"]
6:["date","18","d"]
7:["slug","chainable-n-args-sum-function","d"]
0:["R5YAc2Ezqwxu4uxuM6Ghk",[[["",{"children":[["year","2018","d"],{"children":[["month","10","d"],{"children":[["date","18","d"],{"children":[["slug","chainable-n-args-sum-function","d"],{"children":["__PAGE__?{\"year\":\"2018\",\"month\":\"10\",\"date\":\"18\",\"slug\":\"chainable-n-args-sum-function\"}",{}]}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["year","2018","d"],{"children":[["month","10","d"],{"children":[["date","18","d"],{"children":[["slug","chainable-n-args-sum-function","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children","$5","children","$6","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec967fd209f0dd40.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children","$5","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en-US","children":["$","body",null,{"children":[["$","main",null,{"className":"layout_layout__dCqca","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","footer",null,{"className":"footer_footer__woFMY layout_layout__dCqca","children":["$","nav",null,{"children":["$","p",null,{"children":["Â© 2003-","2024"," 0xADADA (unless otherwise noted.)",["$","br",null,{}],["$","$L9",null,{"href":"/","title":"0xADADA","children":"Home"}]," ",["$","span",null,{"className":"h-card","children":[["$","$L9",null,{"href":"mailto:0xadada.pub@protonmail.com","className":"c-Meta u-email","rel":"me","title":"0xADADA","children":"Email"}]," "]}],["$","$L9",null,{"href":"https://warpcast.com/0xadada","rel":"me nofollow external noopener","title":"0xADADA on Warpcast","children":"Farcaster"}]," ",["$","$L9",null,{"href":"https://twitter.com/0xadada","rel":"me nofollow external noopener","title":"0xADADA on Twitter","children":"Twitter"}]," ",["$","$L9",null,{"href":"https://github.com/0xadada","rel":"me nofollow external noopener","title":"0xADADA on GitHub","children":"GitHub"}]," ",["$","$L9",null,{"href":"https://www.goodreads.com/review/list/60524683-0xadada?shelf=wanted","rel":"me nofollow external noopener","title":"0xADADA on Goodreads","children":"Goodreads"}]," ",["$","$L9",null,{"href":"/rss.xml","children":"RSS"}]," "]}]}]}]]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/32a94118522b884a.css","precedence":"next","crossOrigin":""}]],"$La"]]]]
b:T419,function test(conditions) {
  conditions.forEach(([msg, cFn], i) => {
    const result = cFn();
    console.log(`${i} ${result ? "âœ…" : "ðŸš«"} ${msg}`);
    console.assert(cFn(), msg);
  });
  console.log(`${conditions.length} tests completed`);
}

let conditions = [
  ["sum() returns 0", () => sum() == 0],
  ["sum()() returns 0", () => sum()() == 0],
  ['typeof sum() returns "function"', () => typeof sum() == "function"],
  [
    'typeof sum().valueOf() returns "number"',
    () => typeof sum().valueOf() == "number",
  ],
  ["sum(0) returns 0", () => sum(0) == 0],
  ["sum(0)(0) returns 0", () => sum(0)(0) == 0],
  ["sum()(1) returns 1", () => sum()(1) == 1],
  ["sum(1,2) returns 3", () => sum(1, 2) == 3],
  ["sum(1,2,3) returns 6", () => sum(1, 2, 3) == 6],
  ["sum(1,2,3)() returns 6", () => sum(1, 2, 3)() == 6],
  ["sum(1,2,3)(1) returns 7", () => sum(1, 2, 3)(1) == 7],
  ["sum(1,2,3)(1) returns 7", () => sum(1, 2, 3)(1) == 7],
  ["sum(1,2,3)(1,2) returns 9", () => sum(1, 2, 3)(1, 2) == 9],
];

test(conditions); // run the tests
2:["$","article",null,{"className":"hentry h-entry","children":[["$","header",null,{"children":[["$","h1",null,{"className":"entry-title p-name","children":"An Interview Question: Write a chainable n-argument sum function"}],["$","time",null,{"className":"display-date_published__A_L_d dt-published","dateTime":"2018-10-18T00:00:00.000Z","children":"Thursday October 18, 2018"}],["$","br",null,{}],["$","span",null,{"className":"h-card page_byline___vuXv","children":["by:"," ",["$","span",null,{"className":"page_author__cAd1d fn p-author p-name","children":"0xADADA"}]]}]]}],["$","div",null,{"className":"entry-content e-content","children":[["$","p",null,{"children":"I came across an interesting interview question, along the lines of"}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"\"How would you make this work?\""}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"add(2, 5); // multiple arguments style\n> 7\nadd(2)(5); // currying, a chained invocation style\n> 7\nadd(1,2)(3,4) // both\n> 10\n"}]}],"\n",["$","p",null,{"children":"I thought this was a very interesting question, so took some time to\nimplement a multi-argument / curried function."}],"\n",["$","p",null,{"children":"Heres what I got:"}],"\n",["$","p",null,{"children":["A solution to the multiple argument style is straightforward, theres just the bit to\nchange ",["$","code",null,{"children":"arguments"}]," into an Array, and to handle the case when nothing is\npassed in."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"let sum = function () {\n  let args = arguments.length ? Array.from(arguments) : [0]; // convert arguments to array for .reduce\n  return args.reduce((acc, i) => (acc += i));\n};\n"}]}],"\n",["$","p",null,{"children":["Now, to get chained invocation style to work, I used ",["$","code",null,{"children":"bind"}]," to generate a new function\nthat would be returned to the caller, allowing for chained invocation. The\ntricky bit is to set the ",["$","code",null,{"children":"valueOf"}]," function to return the sum, so when checked\nfor a value, the function returns a number."]}],"\n",["$","p",null,{"children":"Thus:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"let sum = function () {\n  let args = arguments.length ? Array.from(arguments) : [0]; // see (a)\n  let sum = args.reduce((acc, i) => (acc += i));\n  let f = sum.bind(null, sum); // see (b)\n  f.valueOf = () => sum; // see (c)\n  return f;\n};\n/* (a)\n * [0, ...arguments] will convert arguments to an Array\n * to allow the `reduce`. It will also create an initial item\n * `0` to handle the case no arguments are passed in. Thus\n * making `sumChainable()` possible.\n *\n * (b)\n * Generate a nested arrow function that will be returned, and pass\n * the sum to it. This allows the return value of the function\n * to be invoked in a chain, each changed invocation passing\n * the sum of its caller. Thus `sumChainable()()` is possible.\n *\n * (c)\n * Setting the `valueOf()` function on the returned function to\n * return the sum allows the comparison operator `==` to check\n * the value of the function against a number. Thus making operations\n * like `sumChainable() == 0` and `sumChainable(1, 1) + 2 == 4` possible.\n */\n"}]}],"\n",["$","p",null,{"children":["We can clean up this code by using the ",["$","code",null,{"children":"..."}]," rest parameters."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function sum(...args) {\n  const value = args.reduce((acc, a) => acc + a, 0);\n  const f = sum.bind(null, value);\n  f.valueOf = () => value;\n  return f;\n}\n"}]}],"\n",["$","p",null,{"children":"added a function to run test conditions, and defined some tests:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"$b"}]}],"\n",["$","p",null,{"children":"viola!"}],"\n",["$","p",null,{"children":["Future improvements would be to get strict equality ",["$","code",null,{"children":"==="}]," operator to recognize the result\nas type ",["$","code",null,{"children":"number"}]," rather than type ",["$","code",null,{"children":"function"}],", but Javascript doesn't have a way to override operations.\nWe can also change the API slightly by\ninvoking ",["$","code",null,{"children":".valueOf()"}]," at the end of the invocation chain to yield a ",["$","code",null,{"children":"number"}]," primative value."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"// test for strict equality using .valueOf()\nconsole.log(\n  `sum(1,2,3)(4,5)(6).valueOf()`,\n  sum(1, 2, 3)(4, 5)(6).valueOf() === 21 ? \"passed\" : \"failed\",\n);\n"}]}],"\n",["$","p",null,{"children":"future would would be to get working:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"console.log(\n  `typeof sumChainable(1) === 'number'`,\n  typeof sumChainable(1) === `number` ? \"passed\" : \"failed\",\n);\n"}]}]]}],["$","footer",null,{"className":"license_copyright__EpMnZ","children":["This is licensed under a Creative Commons ","cc-by-nc-sa"," International License"]}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"An Interview Question: Write a chainable n-argument sum function"}],["$","meta","3",{"name":"description","content":"Writing a javascript function to sum multiple inputs with chainable invocation."}],["$","link","4",{"rel":"author","href":"https://0xadada.pub"}],["$","meta","5",{"name":"author","content":"0xADADA"}],["$","meta","6",{"name":"keywords","content":"projects,open-source,javascript"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://0xadada.pub/rss.xml"}],["$","meta","8",{"property":"og:title","content":"An Interview Question: Write a chainable n-argument sum function"}],["$","meta","9",{"property":"og:description","content":"Writing a javascript function to sum multiple inputs with chainable invocation."}],["$","meta","10",{"property":"og:url","content":"https://0xadada.pub/2018/10/18/chainable-n-args-sum-function/"}],["$","meta","11",{"property":"og:site_name","content":"0xADADA"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://0xadada.pub/static/images/meta/avatar.svg"}],["$","meta","14",{"property":"og:image:width","content":"660"}],["$","meta","15",{"property":"og:image:height","content":"660"}],["$","meta","16",{"property":"og:type","content":"article"}],["$","meta","17",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","18",{"name":"twitter:title","content":"An Interview Question: Write a chainable n-argument sum function"}],["$","meta","19",{"name":"twitter:description","content":"Writing a javascript function to sum multiple inputs with chainable invocation."}],["$","meta","20",{"name":"twitter:image","content":"https://0xadada.pub/static/images/meta/avatar.svg"}],["$","meta","21",{"name":"twitter:image:width","content":"660"}],["$","meta","22",{"name":"twitter:image:height","content":"660"}],["$","link","23",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","link","24",{"rel":"apple-touch-icon","href":"/apple-icon.png?b764b3a1dbf00a82","type":"image/png","sizes":"180x180"}]]
1:null
